%div.population_show_all
  %h1
    = "Currency Trader - Version 0.3"
  %hr
  %br
  %h2
    = "Trading Operations"
  %table
    %tr
      %th
        = "Trading Operation"
      %th
        = "State"
      %th
        = "Symbol"
      %th
        = "Days running"
      %th
        = "Population"
      %th
        = "Overall P&L"
      %th
        = "Outstanding Positions"
      %th
        = "Todays P&L"
      %th
        ROIC
      %th
        ROIC per day
      %th
        ROIC per month (20 days)
      %th
        ROIC per year (20*12 days)
    - @trading_operations.each do |operation|
      - total_pl = 0
      - operation.trading_positions.where("open=1").order("created_at DESC").limit(20).each do |position|
        - if position.trading_signal.name=="Short Open"
          - pos=(position.value_open*position.units).to_i-(position.units*operation.trading_strategy_population.quote_target.get_quote_value_by_time_stamp["ask"]).to_i
        - elsif position.trading_signal.name=="Long Open"
          - pos=(position.units*operation.trading_strategy_population.quote_target.get_quote_value_by_time_stamp["ask"]).to_i-(position.value_open*position.units).to_i
        - total_pl+=pos
      %tr
        %td
          = link_to operation.id, :action=>"show_all_for", :id=>operation.id
        %td
          - actions=["paused","long","short","automatic"].reject{|x| x==operation.current_state.to_s}
          %b
            = "#{operation.current_state}".upcase
          %br
          - actions.each do |action|
            - action = "pause" if action=="paused"
            = link_to action,"/trading_operations/set_state/#{operation.id}/#{action}"
        %td
          = "#{operation.quote_target.symbol} at #{operation.trading_strategy_population.quote_target.get_quote_value_by_time_stamp["ask"]}"
        %td
          = 90 #(operation.created_at.to_date..Date.today).count
        %td
          = link_to operation.population.description ? operation.population.description : operation.population.id,
                    :controller=>"trading_strategy_populations", :action=>"show_all_for", :id=>operation.population.id
        %td
          = operation.trading_positions.sum("profit_loss")
        %td
          - if total_pl>=0.0
            = "#{operation.trading_positions.where("open=1").count} at #{total_pl}"
          - else
            %span{:style=>"color: red"}
              = "#{operation.trading_positions.where("open=1").count} at #{total_pl}"
        %td
          - todays = operation.trading_positions.select("updated_at, SUM(profit_loss) as PANDL").where(["open=0 AND created_at > ?",(DateTime.now).beginning_of_day]).first.PANDL
          - if todays
            - if todays>=0.0
              = todays
            - else
              %span{:style=>"color: red"}
                = todays
          - else
            = 0.0
        - total_days_running = (operation.created_at.to_date..Date.today).to_a.length
        - weeks_running = (total_days_running/7).to_i
        - total_days_running -= weeks_running*2
        - total_days_running -= 2
        - total_days_running = 1 if total_days_running<1
        - total_days_running = 70
        %td
          = number_to_percentage((operation.trading_positions.sum("profit_loss")/160000)*100.0, :precision => 2)
        %td
          = number_to_percentage(((operation.trading_positions.sum("profit_loss")/160000)*100.0)/total_days_running, :precision => 3)
        %td
          = number_to_percentage((((operation.trading_positions.sum("profit_loss")/160000)*100.0)/total_days_running)*20, :precision => 2)
        %td
          = number_to_percentage((((operation.trading_positions.sum("profit_loss")/160000)*100.0)/total_days_running)*20*12, :precision => 1)

%p{:style=>"padding-left:25px;"}
  = link_to "Show Trading Strategy Populations", :controller=>"trading_strategy_populations"