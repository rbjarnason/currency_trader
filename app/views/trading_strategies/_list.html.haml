%h3
  = "Trading Strategy Set #{trading_strategies.first.trading_strategy_set.id} #{trading_strategies.first.trading_strategy_set.trading_strategy_population.quote_target.symbol} Created: #{trading_strategies.first.trading_strategy_set.created_at} Fitness #{trading_strategies.first.trading_strategy_set.fitness}"
  %b
    = "ROI YR: #{number_to_percentage((((trading_strategies.first.trading_strategy_set.fitness/150000.0)*100.0)/(trading_strategies.first.trading_strategy_set.population.simulation_days_back)*20*12), :precision => 1)}"
%table
  %tr
    %th
      = "Id"
    %th
      = "ROI YR"
    %th
      = "Fitness"
    %th
      = "Trading time frame"
    %th
      = "Short/Long"
    %th
      = "Open How far back in min"
    %th
      = "Close How far back in min"
    %th
      = "Open Magnitude Signal"
    %th
      = "Close Magnitude Signal"
    %th
      = "Ave. Trading signals per day"
    %th
      = "S/P: 30m >"
    %th
      = "S/P: 30m <"
    %th
      = "S/P: 2h >"
    %th
      = "S/L: 2h >"
    %th
      = "S/P: 4h >"
    %th
      = "S/L: 4h >"
    %th
      = "S/P: 6h >"
    %th
      = "S/L: 6h >"
    %th
      = "L/S days bck"
    %th
      = "Min close diff"
    %th
      = "Stop Loss Value"
    %th
      = "Stop Loss Minutes"
    %th
      = "Float sum"
    %th
      = "Binary sum"
  - trading_strategies.each do |strategy|
    %tr
      %td
        = link_to strategy.id, :controller=>"trading_strategies", :action=>"chart", :id=>strategy.id, :day_offset=>0
      %td
        - unless strategy.simulated_fitness==TradingStrategy::FAILED_FITNESS_VALUE
          = number_to_percentage((((strategy.simulated_fitness/50000.0)*100.0)/(strategy.trading_strategy_set.population.simulation_days_back)*20*12), :precision => 1)
      %td
        = strategy.simulated_fitness==TradingStrategy::FAILED_FITNESS_VALUE ? "Excluded by #{strategy.simulated_fitness_failure_reason}" : strategy.simulated_fitness
      %td
        = "#{strategy.trading_strategy_set.trading_time_frame.from_hour}:00 - #{strategy.trading_strategy_set.trading_time_frame.to_hour}:00"
      %td
        = #strategy.long? ? "Long" : "Short"
      %td
        = (strategy.open_how_far_back_milliseconds/1000/60).to_i
      %td
        = (strategy.close_how_far_back_milliseconds/1000/60).to_i
      %td
        = number_with_precision strategy.open_magnitude_signal_trigger.abs, :precision => 7
      %td
        = number_with_precision strategy.close_magnitude_signal_trigger.abs, :precision => 7
      %td
        = strategy.number_of_evolution_trading_signals/strategy.trading_strategy_set.trading_strategy_population.simulation_days_back
      %td
        = strategy.float_parameters[4].abs.to_i
      %td
        = strategy.float_parameters[5].abs.to_i
      %td
        = strategy.float_parameters[6].abs.to_i
      %td
        = strategy.float_parameters[7].abs.to_i
      %td
        = strategy.float_parameters[8].abs.to_i
      %td
        = strategy.float_parameters[9].abs.to_i
      %td
        = strategy.float_parameters[10].abs.to_i
      %td
        = strategy.float_parameters[11].abs.to_i
      %td
        = strategy.float_parameters[12].abs.to_i/10
      %td
        = strategy.float_parameters[13].abs.to_i
      %td
        = strategy.float_parameters[14].abs.to_i
      %td
        = strategy.float_parameters[15].abs.to_i
      %td
        = number_with_precision strategy.float_parameters.sum, :precision => 3
      %td
        = strategy.binary_parameters.sum
