%div.population_show_all
  %h1
    = "Currency Trader - Version 0.3"
  %hr
  %br
  %h2
    = "Evolving Population #{@population.description}"
  %table
    %tr
      %th
        = "Population size"
      %th
        = "Units to short/long on each trade"
      %th
        = "Maximum minutes to look back for change"
      %th
        = "Current generation"
      %th
        = "Number of trading strategy sets"
      %th
        = "From / To"
      %th
        = "Min overall trading signals per strategy"
      %th
        = "Max overall trading signals per strategy"
      %th
        = "Max daily trading signals per strategy"
      %th
        = "Release position EOD"
    %tr
      %td
        = @population.population_size
      %td
        = TradingStrategy::DEFAULT_POSITION_UNITS
      %td
        = @population.simulation_max_minutes_back
      %td
        = @population.current_generation
      %td
        = "#{@population.trading_strategy_sets.count} | #{@population.trading_strategy_sets.where("complete=0").count} left"
      %td
        -  if @population.simulation_end_date
          = "#{@population.simulation_end_date.to_date-@population.simulation_days_back-1} <br> #{@population.simulation_end_date.to_date-1}".html_safe
        - else
          = "#{Date.today-@population.simulation_days_back} <br> #{Date.today-1}".html_safe
      %td
        = @population.simulation_min_overall_trading_signals
      %td
        = @population.simulation_max_overall_trading_signals
      %td
        = @population.simulation_max_daily_trading_signals
      %td
        = TradingStrategySet::FORCE_RELEASE_POSITION ? "Yes" : "No"
  - if @population.best_trading_strategy_set_id
    %h2
      = "Best Trading Strategy Set"
    = render :partial=>"set", :locals=>{:set=>TradingStrategySet.find(@population.best_trading_strategy_set_id)}
    %h2
      = "Strongest Trading Strategy Sets #{@population.trading_strategy_sets.order("accumulated_fitness desc").count}"
    - @population.trading_strategy_sets.order("accumulated_fitness desc").limit(20).each do |set|
      = render :partial=>"set", :locals=>{:set=>set}
